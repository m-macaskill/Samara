#tag ModuleModule loggingModule	#tag Method, Flags = &h0		Sub gHandleException(MyError as runtimeException, location as string)		  // a global method for handling exceptions of whatever type, describing the location of the method and class		  // where the error occurred.		  		  // Handle errors by showing a message showing what and where the error is...		  		  If MyError IsA FunctionNotFoundException Then		    MsgBox"FunctionNotFoundException  - Location: "+Location+Chr(10)+"A function declared using the Declare statement's Soft keyword could not be loaded."		    		  ElseIf MyError IsA IllegalCastException Then		    MsgBox"IllegalCastException - Location: "+Location+Chr(10)+"Attempt to recast an object and send it a message its real class can't accept."		    		  ElseIf MyError IsA InvalidParentException Then		    MsgBox"InvalidParentException - Location: "+Location+Chr(10)+"Attempted to get the parent of a control using the Parent property of the Control class, but its parent is in a different window."		    		  ElseIf MyError IsA KeyChainException  Then		    MsgBox"KeyChainException - Location: "+Location+Chr(10)+"A method of the KeyChain or KeyChainItem classes failed."		    		  ElseIf MyError IsA KeyNotFoundException Then		    MsgBox"KeyNotFoundException - Location: "+Location+Chr(10)+"Attempted to access an item in a Dictionary using a key that is not in the Dictionary."		    		  ElseIf MyError IsA NilObjectException Then		    MsgBox"NilObjectException - Location: "+Location+Chr(10)+"An attempt was made to access an object that does not exist."		    		  ElseIf MyError IsA NoOpenTransportException Then		    MsgBox"NoOpenTransportException - Location: "+Location+Chr(10)+"Open Transport is not installed on the computer."		    		  ElseIf MyError IsA OLEException Then		    MsgBox"Location: "+Location+Chr(10)+"An OLE-related runtime error occurred."		    		  ElseIf MyError IsA OutOfBoundsException Then		    MsgBox"OutOfBoundsException - Location: "+Location+Chr(10)+"An attempt was made to read from or write to a value, character, or element outside"+Chr(10)+ _		    "the bounds of the object or data type, i.e., you tried to access an array element that does not exist."		    		  ElseIf MyError IsA OutOfMemoryException Then		    MsgBox"OutOfMemoryException - Location: "+Location+Chr(10)+"There isn't enough memory to complete an operation."		    		  ElseIf MyError IsA RegExException Then		    MsgBox"RegExException - Location: "+Location+Chr(10)+"Incorrect syntax in a regular expression."		    		  ElseIf MyError IsA RegExSearchPatternException Then		    MsgBox"RegExSearchPatternException - Location: "+Location+Chr(10)+"An incorrect search pattern in a regular expression was specified."		    		  ElseIf MyError IsA RegistryAccessErrorException Then		    MsgBox"RegistryAccessErrorException - Location: "+Location+Chr(10)+"Attempted to use the RegistryItem class without proper access privileges."		    		  ElseIf MyError IsA ServiceNotAvailableException Then		    MsgBox"ServiceNotAvailableException - Location: "+Location+Chr(10)+"Requested service is not available."		    		  ElseIf MyError IsA  ShellNotRunningException Then		    MsgBox"ShellNotRunningException - Location: "+Location+Chr(10)+"Attempted to pass a string to a Shell that is not running. Or Attempted to access an interactive shell when"+Chr(10)+ _		    "it was not running. or tried to change the context of the script while it was running."		    		  ElseIf MyError IsA StackOverflowException Then		    MsgBox"StackOverflowException - Location: "+Location+Chr(10)+"Stack Overflow."		    		  ElseIf MyError IsA ThreadAlreadyRunningException Then		    MsgBox"ThreadAlreadyRunningException - Location: "+Location+Chr(10)+"Attempted to set the stack size of a thread that is already running or tried to call"+Chr(10)+_		    "the Run method for a thread that is already running."		    		  ElseIf MyError IsA TypeMismatchException Then		    MsgBox"TypeMismatchException - Location: "+Location+Chr(10)+"Attempted to assign to an object the wrong data type."		    		  ElseIf MyError IsA UnsupportedFormatException Then		    MsgBox"UnsupportedFormatException - Location: "+Location+Chr(10)+"Incorrect syntax in an expression."		    		  Else		    MsgBox"Location: "+Location+Chr(10)+"Undocumented Error: "+MyError.message+"  Error No: "+str(MyError.ErrorNumber)		    		  End If		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub gLog(message as string)		  // a globally accessible method that allows messages to be displayed in a staticText of the active chartWindow.		  dim d as new date		  		  system.debugLog "Samara " + d.longTime + ": " + message		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub gLogMeasurement(currMeasure as dictionary)		  // a crude 'safety' method which logs each saccade measurement in case there is a bug		  // which prevents the user being able to save the measures all together in a proper file.		  // In that case, the user can extract the logged measures from the debug log, by filtering for the term 'Samara measure:'.		  // Amended from the saveSaccdeData method of the iViewSet class.		  		  dim numColumns, i as integer		  dim currLine as string		  dim d as new date		  		  numColumns = currMeasure.Count -1 // how many 'fields' are in each measurement		  		  // now export values		  currLine = "Samara measure: " + d.longTime + chr(9)		  for i = 0 to numColumns		    currLine = currLine + currMeasure.value(currMeasure.key(i)) + chr(9)		  next		  		  system.debugLog currLine		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub gTime(methodName as string)		  // a globally accessible method that allows methods to be timed for optimisation.		  // send the name of the method or event.  That name is stored, and the next time this method is called,		  // the time since the previous call is ouptut along with the method name.		  		  system.debugLog "Samara timing (ms): " + mLastMethodForTiming + str((microseconds - mLastTimeStamp)*1000)		  		  mLastTimeStamp = microseconds		  mLastMethodForTiming = methodName		End Sub	#tag EndMethod	#tag Note, Name = Test svn		kdjfjkdhf	#tag EndNote	#tag Property, Flags = &h1		Protected mLastMethodForTiming As string = "None set"	#tag EndProperty	#tag Property, Flags = &h1		Protected mLastTimeStamp As double	#tag EndProperty	#tag Constant, Name = gBackgroundColour, Type = Color, Dynamic = False, Default = \"&cFFFFFF", Scope = Public	#tag EndConstantEnd Module#tag EndModule